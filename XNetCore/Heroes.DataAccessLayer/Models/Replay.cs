// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Heroes.DataAccessLayer.Models
{
    [Table("replay")]
    public partial class Replay
    {
        public Replay()
        {
            ReplayCharacterDraftOrders = new HashSet<ReplayCharacterDraftOrder>();
            ReplayCharacterMatchAwards = new HashSet<ReplayCharacterMatchAward>();
            ReplayCharacterTalents = new HashSet<ReplayCharacterTalent>();
            ReplayCharacters = new HashSet<ReplayCharacter>();
            ReplayPeriodicXpBreakdowns = new HashSet<ReplayPeriodicXpBreakdown>();
            ReplayShares = new HashSet<ReplayShare>();
            ReplayTeamHeroBans = new HashSet<ReplayTeamHeroBan>();
            ReplayTeamObjectives = new HashSet<ReplayTeamObjective>();
        }

        [Key]
        [Column("ReplayID", TypeName = "int(11)")]
        public int ReplayId { get; set; }
        [Column(TypeName = "int(11)")]
        public int ReplayBuild { get; set; }
        [Column(TypeName = "int(11)")]
        public int GameMode { get; set; }
        [Column("MapID", TypeName = "int(11)")]
        public int MapId { get; set; }
        [Column(TypeName = "time")]
        public TimeSpan ReplayLength { get; set; }
        [Required]
        [MaxLength(16)]
        public byte[] ReplayHash { get; set; }
        [Column(TypeName = "timestamp")]
        public DateTime TimestampReplay { get; set; }
        [Column(TypeName = "timestamp")]
        public DateTime TimestampCreated { get; set; }
        [Column("HOTSAPIFingerprint", TypeName = "varchar(36)")]
        public string Hotsapifingerprint { get; set; }

        [InverseProperty(nameof(ReplayCharacterDraftOrder.Replay))]
        public virtual ICollection<ReplayCharacterDraftOrder> ReplayCharacterDraftOrders { get; set; }
        [InverseProperty(nameof(ReplayCharacterMatchAward.Replay))]
        public virtual ICollection<ReplayCharacterMatchAward> ReplayCharacterMatchAwards { get; set; }
        [InverseProperty(nameof(ReplayCharacterProAssociation.Replay))]
        public virtual ICollection<ReplayCharacterProAssociation> ReplayCharacterProAssociations { get; set; }
        [InverseProperty(nameof(ReplayCharacterTalent.Replay))]
        public virtual ICollection<ReplayCharacterTalent> ReplayCharacterTalents { get; set; }
        [InverseProperty(nameof(ReplayCharacter.Replay))]
        public virtual ICollection<ReplayCharacter> ReplayCharacters { get; set; }
        [InverseProperty(nameof(ReplayPeriodicXpBreakdown.Replay))]
        public virtual ICollection<ReplayPeriodicXpBreakdown> ReplayPeriodicXpBreakdowns { get; set; }
        [InverseProperty(nameof(ReplayShare.Replay))]
        public virtual ICollection<ReplayShare> ReplayShares { get; set; }
        [InverseProperty(nameof(ReplayTeamHeroBan.Replay))]
        public virtual ICollection<ReplayTeamHeroBan> ReplayTeamHeroBans { get; set; }
        [InverseProperty(nameof(ReplayTeamObjective.Replay))]
        public virtual ICollection<ReplayTeamObjective> ReplayTeamObjectives { get; set; }
    }
}