// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Heroes.DataAccessLayer.Models
{
    [Table("player")]
    public partial class Player
    {
        public Player()
        {
            LeaderboardRankings = new HashSet<LeaderboardRanking>();
            Net48Users = new HashSet<Net48User>();
            PlayerAggregates = new HashSet<PlayerAggregate>();
            PlayerAltPlayerIdmainNavigations = new HashSet<PlayerAlt>();
            PlayerMmrMilestoneV3s = new HashSet<PlayerMmrMilestoneV3>();
            ReplayCharacterDraftOrders = new HashSet<ReplayCharacterDraftOrder>();
            ReplayCharacterMatchAwards = new HashSet<ReplayCharacterMatchAward>();
            ReplayCharacterTalents = new HashSet<ReplayCharacterTalent>();
            ReplayCharacters = new HashSet<ReplayCharacter>();
            ReplayShares = new HashSet<ReplayShare>();
            ReplayTeamObjectives = new HashSet<ReplayTeamObjective>();
        }

        [Key]
        [Column("PlayerID")]
        public int PlayerId { get; set; }
        public int BattleNetRegionId { get; set; }
        public int BattleNetSubId { get; set; }
        public int BattleNetId { get; set; }
        [Required]
        [Column(TypeName = "varchar(50)")]
        public string Name { get; set; }
        public int? BattleTag { get; set; }
        [Column(TypeName = "timestamp")]
        public DateTime TimestampCreated { get; set; }

        [InverseProperty("Player")]
        public virtual GroupFinderListing GroupFinderListing { get; set; }
        [InverseProperty("Player")]
        public virtual LeaderboardOptOut LeaderboardOptOut { get; set; }
        [InverseProperty(nameof(PlayerAlt.PlayerIdaltNavigation))]
        public virtual PlayerAlt PlayerAltPlayerIdaltNavigation { get; set; }
        [InverseProperty("Player")]
        public virtual PlayerBanned PlayerBanned { get; set; }
        [InverseProperty("Player")]
        public virtual PlayerBannedLeaderboard PlayerBannedLeaderboard { get; set; }
        [InverseProperty("Player")]
        public virtual PlayerDisableNameChange PlayerDisableNameChange { get; set; }
        [InverseProperty("Player")]
        public virtual Reputation Reputation { get; set; }
        [InverseProperty(nameof(LeaderboardRanking.Player))]
        public virtual ICollection<LeaderboardRanking> LeaderboardRankings { get; set; }
        [InverseProperty(nameof(Net48User.Player))]
        public virtual ICollection<Net48User> Net48Users { get; set; }
        [InverseProperty(nameof(PlayerAggregate.Player))]
        public virtual ICollection<PlayerAggregate> PlayerAggregates { get; set; }
        [InverseProperty(nameof(PlayerAlt.PlayerIdmainNavigation))]
        public virtual ICollection<PlayerAlt> PlayerAltPlayerIdmainNavigations { get; set; }
        [InverseProperty(nameof(PlayerMmrMilestoneV3.Player))]
        public virtual ICollection<PlayerMmrMilestoneV3> PlayerMmrMilestoneV3s { get; set; }
        [InverseProperty(nameof(ReplayCharacterDraftOrder.Player))]
        public virtual ICollection<ReplayCharacterDraftOrder> ReplayCharacterDraftOrders { get; set; }
        [InverseProperty(nameof(ReplayCharacterMatchAward.Player))]
        public virtual ICollection<ReplayCharacterMatchAward> ReplayCharacterMatchAwards { get; set; }
        [InverseProperty(nameof(ReplayCharacterProAssociation.Player))]
        public virtual ICollection<ReplayCharacterProAssociation> ReplayCharacterProAssociations { get; set; }
        [InverseProperty(nameof(ReplayCharacterTalent.Player))]
        public virtual ICollection<ReplayCharacterTalent> ReplayCharacterTalents { get; set; }
        [InverseProperty(nameof(ReplayCharacter.Player))]
        public virtual ICollection<ReplayCharacter> ReplayCharacters { get; set; }
        [InverseProperty(nameof(ReplayShare.PlayerIdsharedByNavigation))]
        public virtual ICollection<ReplayShare> ReplayShares { get; set; }
        [InverseProperty(nameof(ReplayTeamObjective.Player))]
        public virtual ICollection<ReplayTeamObjective> ReplayTeamObjectives { get; set; }
    }
}