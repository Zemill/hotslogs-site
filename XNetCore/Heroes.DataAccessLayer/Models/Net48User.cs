// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace Heroes.DataAccessLayer.Models
{
    [Table("net48_users")]
    public partial class Net48User
    {
        public Net48User()
        {
            LogErrors = new HashSet<LogError>();
        }

        [Key]
        [Column("id")]
        public int Id { get; set; }
        [Required]
        [Column("email", TypeName = "varchar(45)")]
        public string Email { get; set; }
        [Required]
        [Column("username", TypeName = "varchar(45)")]
        public string Username { get; set; }
        [Required]
        [Column("password", TypeName = "varchar(255)")]
        public string Password { get; set; }
        [Column("acceptedTOS", TypeName = "bit(1)")]
        public ulong AcceptedTos { get; set; }
        [Required]
        [Column("userGUID", TypeName = "varchar(45)")]
        public string UserGuid { get; set; }
        [Column("premium")]
        public int Premium { get; set; }
        [Column("resettoken", TypeName = "varchar(255)")]
        public string Resettoken { get; set; }
        [Column("tokengenerated", TypeName = "datetime")]
        public DateTime? Tokengenerated { get; set; }
        [Column("admin")]
        public int? Admin { get; set; }
        [Column("subscriptionid", TypeName = "varchar(45)")]
        public string Subscriptionid { get; set; }
        [Column("applicationId")]
        public int ApplicationId { get; set; }
        [Required]
        [Column("isAnonymous")]
        public bool? IsAnonymous { get; set; }
        [Column("lastActivityDate", TypeName = "datetime")]
        public DateTime? LastActivityDate { get; set; }
        [Column("IsBattleNetOAuthAuthorized", TypeName = "bit(1)")]
        public ulong IsBattleNetOauthAuthorized { get; set; }
        [Column(TypeName = "bit(1)")]
        public ulong IsGroupFinderAuthorized3 { get; set; }
        [Column(TypeName = "bit(1)")]
        public ulong IsGroupFinderAuthorized4 { get; set; }
        [Column(TypeName = "bit(1)")]
        public ulong IsGroupFinderAuthorized5 { get; set; }
        [Column("playerID")]
        public int? PlayerId { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastLoginDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastPasswordChangedDate { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CreationDate { get; set; }
        public bool? IsLockedOut { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? LastLockedOutDate { get; set; }
        public uint? FailedPasswordAttemptCount { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FailedPasswordAttemptWindowStart { get; set; }
        public uint? FailedPasswordAnswerAttemptCount { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? FailedPasswordAnswerAttemptWindowStart { get; set; }
        [Column("expiration", TypeName = "datetime")]
        public DateTime? Expiration { get; set; }
        [Column(TypeName = "timestamp")]
        public DateTime? PremiumSupporterSince { get; set; }

        [ForeignKey(nameof(PlayerId))]
        [InverseProperty("Net48Users")]
        public virtual Player Player { get; set; }
        [InverseProperty(nameof(LogError.User))]
        public virtual ICollection<LogError> LogErrors { get; set; }
    }
}