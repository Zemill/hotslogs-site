insert into `buildnumbers` (`buildnumber`,`builddate`,`version`) select `buildnumber`,`builddate`,`version` from `slice_buildnumbers`;
insert into `localizationalias` (`IdentifierID`,`Type`,`PrimaryName`,`AttributeName`,`Group`,`SubGroup`,`AliasesCSV`,`NewGroup`) select `IdentifierID`,`Type`,`PrimaryName`,`AttributeName`,`Group`,`SubGroup`,`AliasesCSV`,`NewGroup` from `slice_localizationalias` where identifierid<>0;
insert into `localizationalias` (`IdentifierID`,`Type`,`PrimaryName`,`AttributeName`,`AliasesCSV`) values (0,9,'Unknown','','Unknown');
insert into `league` (`LeagueID`,`LeagueName`,`RequiredGames`) select `LeagueID`,`LeagueName`,`RequiredGames` from `slice_league`;
insert into `heroiconinformation` (`pkid`,`name`,`icon`) select `pkid`,`name`,`icon` from `slice_heroiconinformation`;
insert into `herotalentinformation` (`Character`,`ReplayBuildFirst`,`ReplayBuildLast`,`TalentID`,`TalentTier`,`TalentName`,`TalentDescription`) select `Character`,`ReplayBuildFirst`,`ReplayBuildLast`,`TalentID`,`TalentTier`,`TalentName`,`TalentDescription` from `slice_herotalentinformation`;
insert into `talentimagemapping` (`TalentName`,`TalentImage`,`HeroName`,`Character`) select `TalentName`,`TalentImage`,`HeroName`,`Character` from `slice_talentimagemapping`;
insert into `player` (`PlayerID`,`BattleNetRegionId`,`BattleNetSubId`,`BattleNetId`,`Name`,`BattleTag`,`TimestampCreated`) select `PlayerID`,`BattleNetRegionId`,`BattleNetSubId`,`BattleNetId`,`Name`,`BattleTag`,`TimestampCreated` from `slice_player`;
insert into `net48_users` (`id`,`email`,`username`,`password`,`acceptedTOS`,`userGUID`,`premium`,`resettoken`,`tokengenerated`,`admin`,`subscriptionid`,`applicationId`,`isAnonymous`,`lastActivityDate`,`IsBattleNetOAuthAuthorized`,`IsGroupFinderAuthorized3`,`IsGroupFinderAuthorized4`,`IsGroupFinderAuthorized5`,`playerID`,`LastLoginDate`,`LastPasswordChangedDate`,`CreationDate`,`IsLockedOut`,`LastLockedOutDate`,`FailedPasswordAttemptCount`,`FailedPasswordAttemptWindowStart`,`FailedPasswordAnswerAttemptCount`,`FailedPasswordAnswerAttemptWindowStart`,`expiration`,`PremiumSupporterSince`) select `id`,`email`,`username`,`password`,`acceptedTOS`,`userGUID`,`premium`,`resettoken`,`tokengenerated`,`admin`,`subscriptionid`,`applicationId`,`isAnonymous`,`lastActivityDate`,`IsBattleNetOAuthAuthorized`,`IsGroupFinderAuthorized3`,`IsGroupFinderAuthorized4`,`IsGroupFinderAuthorized5`,`playerID`,`LastLoginDate`,`LastPasswordChangedDate`,`CreationDate`,`IsLockedOut`,`LastLockedOutDate`,`FailedPasswordAttemptCount`,`FailedPasswordAttemptWindowStart`,`FailedPasswordAnswerAttemptCount`,`FailedPasswordAnswerAttemptWindowStart`,`expiration`,`PremiumSupporterSince` from `slice_net48_users`;
insert into `replay` (`ReplayID`,`ReplayBuild`,`GameMode`,`MapID`,`ReplayLength`,`ReplayHash`,`TimestampReplay`,`TimestampCreated`,`HOTSAPIFingerprint`) select `ReplayID`,`ReplayBuild`,`GameMode`,`MapID`,`ReplayLength`,`ReplayHash`,`TimestampReplay`,`TimestampCreated`,`HOTSAPIFingerprint` from `slice_replay`;
insert into `replaycharacter` (`ReplayID`,`PlayerID`,`IsAutoSelect`,`CharacterID`,`CharacterLevel`,`IsWinner`,`MMRBefore`,`MMRChange`) select `ReplayID`,`PlayerID`,`IsAutoSelect`,`CharacterID`,`CharacterLevel`,`IsWinner`,`MMRBefore`,`MMRChange` from `slice_replaycharacter`;
insert into `event` (`EventID`,`EventIDParent`,`EventName`,`EventOrder`,`EventGamesPlayed`,`IsEnabled`) select `EventID`,`EventIDParent`,`EventName`,`EventOrder`,`EventGamesPlayed`,`IsEnabled` from `slice_event`;
insert into `event_team` (`TeamId`,`EventID`,`Name`) select `TeamId`,`EventID`,`Name` from `slice_event_team`;
insert into `leaderboardoptout` select * from `slice_leaderboardoptout`;
insert into `leaderboardranking` (`PlayerID`,`GameMode`,`CurrentMMR`,`LeagueID`,`LeagueRank`,`IsEligibleForLeaderboard`) select `PlayerID`,`GameMode`,`CurrentMMR`,`LeagueID`,`LeagueRank`,`IsEligibleForLeaderboard` from `slice_leaderboardranking`;
insert into `playeraggregate` (`PlayerID`,`GameMode`,`GamesPlayedTotal`,`GamesPlayedWithMMR`,`GamesPlayedRecently`,`FavoriteCharacter`,`TimestampLastUpdated`) select `PlayerID`,`GameMode`,`GamesPlayedTotal`,`GamesPlayedWithMMR`,`GamesPlayedRecently`,`FavoriteCharacter`,`TimestampLastUpdated` from `slice_playeraggregate`;
insert into `playeralt` (`PlayerIDAlt`,`PlayerIDMain`) select `PlayerIDAlt`,`PlayerIDMain` from `slice_playeralt`;
insert into `playerbanned` select * from `slice_playerbanned`;
insert into `playerdisablenamechange` select * from `slice_playerdisablenamechange`;
insert into `playermmrmilestonev3` (`PlayerID`,`GameMode`,`MilestoneDate`,`MMRMean`,`MMRStandardDeviation`,`MMRRating`) select `PlayerID`,`GameMode`,`MilestoneDate`,`MMRMean`,`MMRStandardDeviation`,`MMRRating` from `slice_playermmrmilestonev3`;
insert into `playermmrreset` (`ResetDate`,`Title`,`MMRMeanMultiplier`,`MMRStandardDeviationGapMultiplier`,`IsClampOutliers`) select `ResetDate`,`Title`,`MMRMeanMultiplier`,`MMRStandardDeviationGapMultiplier`,`IsClampOutliers` from `slice_playermmrreset`;
insert into `replay_mirror` select * from `slice_replay_mirror`;
insert into `replay_notalents` (`ReplayID`,`ReplayBuild`,`GameMode`,`MapID`,`ReplayLength`,`ReplayHash`,`TimestampReplay`,`TimestampCreated`,`HOTSAPIFingerprint`) select `ReplayID`,`ReplayBuild`,`GameMode`,`MapID`,`ReplayLength`,`ReplayHash`,`TimestampReplay`,`TimestampCreated`,`HOTSAPIFingerprint` from `slice_replay_notalents`;
insert into `replay_playertalentbuilds` (`replayid`,`playerid`,`talentselection`) select `replayid`,`playerid`,`talentselection` from `slice_replay_playertalentbuilds`;
insert into `replaycharacter_pro_association` (`ReplayID`,`PlayerID`,`TeamId`,`ProName`) select `ReplayID`,`PlayerID`,`TeamId`,`ProName` from `slice_replaycharacter_pro_association`;
insert into `replaycharacterdraftorder` (`ReplayID`,`PlayerID`,`DraftOrder`) select `ReplayID`,`PlayerID`,`DraftOrder` from `slice_replaycharacterdraftorder`;
insert into `replaycharactermatchaward` (`ReplayID`,`PlayerID`,`MatchAwardType`) select `ReplayID`,`PlayerID`,`MatchAwardType` from `slice_replaycharactermatchaward`;
insert into `replaycharacterscoreresult` (`ReplayID`,`PlayerID`,`Level`,`Takedowns`,`SoloKills`,`Assists`,`Deaths`,`HighestKillStreak`,`HeroDamage`,`SiegeDamage`,`StructureDamage`,`MinionDamage`,`CreepDamage`,`SummonDamage`,`TimeCCdEnemyHeroes`,`Healing`,`SelfHealing`,`DamageTaken`,`ExperienceContribution`,`TownKills`,`TimeSpentDead`,`MercCampCaptures`,`WatchTowerCaptures`,`MetaExperience`) select `ReplayID`,`PlayerID`,`Level`,`Takedowns`,`SoloKills`,`Assists`,`Deaths`,`HighestKillStreak`,`HeroDamage`,`SiegeDamage`,`StructureDamage`,`MinionDamage`,`CreepDamage`,`SummonDamage`,`TimeCCdEnemyHeroes`,`Healing`,`SelfHealing`,`DamageTaken`,`ExperienceContribution`,`TownKills`,`TimeSpentDead`,`MercCampCaptures`,`WatchTowerCaptures`,`MetaExperience` from `slice_replaycharacterscoreresult`;
insert into `replaycharactertalent` (`ReplayID`,`PlayerID`,`TalentID`) select `ReplayID`,`PlayerID`,`TalentID` from `slice_replaycharactertalent`;
insert into `replaycharacterupgradeeventreplaylengthpercent` (`ReplayID`,`PlayerID`,`UpgradeEventType`,`UpgradeEventValue`,`ReplayLengthPercent`) select `ReplayID`,`PlayerID`,`UpgradeEventType`,`UpgradeEventValue`,`ReplayLengthPercent` from `slice_replaycharacterupgradeeventreplaylengthpercent`;
insert into `replayperiodicxpbreakdown` (`ReplayID`,`IsWinner`,`GameTimeMinute`,`MinionXP`,`CreepXP`,`StructureXP`,`HeroXP`,`TrickleXP`) select `ReplayID`,`IsWinner`,`GameTimeMinute`,`MinionXP`,`CreepXP`,`StructureXP`,`HeroXP`,`TrickleXP` from `slice_replayperiodicxpbreakdown`;
insert into `replayteamheroban` (`ReplayID`,`CharacterID`,`IsWinner`,`BanPhase`) select `ReplayID`,`CharacterID`,`IsWinner`,`BanPhase` from `slice_replayteamheroban`;
insert into `replayteamobjective` (`ReplayID`,`IsWinner`,`TeamObjectiveType`,`TimeSpan`,`PlayerID`,`Value`) select `ReplayID`,`IsWinner`,`TeamObjectiveType`,`TimeSpan`,`PlayerID`,`Value` from `slice_replayteamobjective`;
insert into `reputation` (`PlayerId`,`Reputation`) select `PlayerId`,`Reputation` from `slice_reputation`;
insert into `votes` (`Id`,`VotingPlayerId`,`TargetPlayerId`,`TargetReplayId`,`Up`) select `Id`,`VotingPlayerId`,`TargetPlayerId`,`TargetReplayId`,`Up` from `slice_votes`;
